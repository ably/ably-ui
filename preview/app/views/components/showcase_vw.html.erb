<%= render(TitleComponent.new(react: false, vw: true)) do %>
  Showcase
<% end %>

<h1 class="text-h2 font-large">Quotations</h1>

<p class="text-p1 font-light font-sans antialiased mb-8 mt-16">Showcase component in a large container with slideshow disabled.</p>

<div class="my-32 max-w-screen-xl">
  <%= render(AblyUi::Core::Showcase.new) %>
</div>

<hr />

<p class="text-p1 font-light font-sans antialiased mb-8 mt-32">Showcase component in a small container with slideshow enabled.</p>

<div class="my-32 max-w-screen-sm">
  <%= render(AblyUi::Core::Showcase.new) %>
</div>

<h1 class="text-h2 mt-96 font-large">Case studies</h1>

<p class="text-p1 font-light font-sans antialiased mb-8 mt-16">
  This variant explicitly declares the content layout to use in the ERB view, along with a list of four client IDs for the respective content rows.
</p>

<div class="my-32 max-w-screen-xl">
  <%=
    render(AblyUi::Core::Showcase.new(companies: %i[split australian_open hubspot lightspeed], layout: 'casestudies'))
  %>
</div>

<p class="text-p1 font-light font-sans antialiased mb-8 mt-32">
  Similar to above example but has a different logo order, a narrow container and slideshow enabled.
</p>

<div class="my-32 max-w-screen-sm">
  <%=
    render(AblyUi::Core::Showcase.new(companies: %i[lightspeed hubspot australian_open split], layout: 'casestudies'))
  %>
</div>

<% content_for :component do %>
  <%= javascript_include_tag 'ably_ui/core/showcase/component' %>

  <script type="text/javascript">
    document.body.classList.add("bg-light-grey", "m-32");

    document.addEventListener("DOMContentLoaded", () => {
      const showcases = document.querySelectorAll('[data-id="showcase"]');

      AblyUi.Core.Showcase(showcases[0], false);
      AblyUi.Core.Showcase(showcases[1], true);
      AblyUi.Core.Showcase(showcases[2], false);
      AblyUi.Core.Showcase(showcases[3], true);
    });
  </script>
<% end %>

exports[`Code Snapshot Test > react > test case common to both #0`] = `
<div class="hljs overflow-auto p-32 " data-id="code">
  <pre
    lang="javascript"
  ><code class="language-javascript ui-text-code1"><span class="hljs-keyword">var</span> ably = <span class="hljs-keyword">new</span> Ably.Realtime(<span class="hljs-string">'1WChTA.mc0Biw:kNfiYG4KiPgmHHgH'</span>);
<span class="hljs-keyword">var</span> channel = ably.channels.get(<span class="hljs-string">'web-pal'</span>);

<span class="hljs-comment">// Subscribe to messages on channel</span>
channel.subscribe(<span class="hljs-string">'greeting'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">message</span>) </span>{
  alert(message.data);
});</code></pre>
</div>
`;

exports[`Code Snapshot Test > react > test case common to both #1`] = `
<div class="hljs overflow-auto p-32 " data-id="code">
  <pre
    lang="swift"
  ><code class="language-swift ui-text-code1"><span class="hljs-keyword">let</span> ably <span class="hljs-operator">=</span> <span class="hljs-type">ARTRealtime</span>(key: <span class="hljs-string">"1WChTA.mc0Biw:kNfiYG4KiPgmHHgH"</span>)
<span class="hljs-keyword">let</span> channel <span class="hljs-operator">=</span> ably.channels.get(<span class="hljs-string">"web-pal"</span>)

<span class="hljs-comment">// Subscribe to messages on channel</span>
channel.subscribe(<span class="hljs-string">"greeting"</span>) { message <span class="hljs-keyword">in</span>
  <span class="hljs-built_in">print</span>(<span class="hljs-string">"<span class="hljs-subst">\\(message.data)</span>"</span>)
}</code></pre>
</div>
`;

exports[`Code Snapshot Test > react > test case common to both #2`] = `
<div class="hljs overflow-auto p-32 " data-id="code">
  <pre
    lang="java"
  ><code class="language-java ui-text-code1">AblyRealtime ably = <span class="hljs-keyword">new</span> AblyRealtime(<span class="hljs-string">"1WChTA.mc0Biw:kNfiYG4KiPgmHHgH"</span>);
Channel channel = ably.channels.get(<span class="hljs-string">"web-pal"</span>);

<span class="hljs-comment">/* Subscribe to messages on channel */</span>

MessageListener listener;
listener = <span class="hljs-keyword">new</span> MessageListener() {
  <span class="hljs-meta">@Override</span>
  <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onMessage</span><span class="hljs-params">(Message message)</span> </span>{
    System.out.print(message.data);
  };
};
channel.subscribe(<span class="hljs-string">"greeting"</span>, listener);</code></pre>
</div>
`;

exports[`Code Snapshot Test > view component > test case common to both #0`] = `
<div class="hljs overflow-auto p-32 " data-id="code">
  <pre
    lang="javascript"
  ><code class="language-javascript ui-text-code1"><span class="hljs-keyword">var</span> ably = <span class="hljs-keyword">new</span> Ably.Realtime(<span class="hljs-string">'1WChTA.mc0Biw:kNfiYG4KiPgmHHgH'</span>);
<span class="hljs-keyword">var</span> channel = ably.channels.get(<span class="hljs-string">'web-pal'</span>);

<span class="hljs-comment">// Subscribe to messages on channel</span>
channel.subscribe(<span class="hljs-string">'greeting'</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">message</span>) </span>{
  alert(message.data);
});</code></pre>
</div>
`;

exports[`Code Snapshot Test > view component > test case common to both #1`] = `
<div class="hljs overflow-auto p-32 " data-id="code">
  <pre
    lang="swift"
  ><code class="language-swift ui-text-code1"><span class="hljs-keyword">let</span> ably <span class="hljs-operator">=</span> <span class="hljs-type">ARTRealtime</span>(key: <span class="hljs-string">"1WChTA.mc0Biw:kNfiYG4KiPgmHHgH"</span>)
<span class="hljs-keyword">let</span> channel <span class="hljs-operator">=</span> ably.channels.get(<span class="hljs-string">"web-pal"</span>)

<span class="hljs-comment">// Subscribe to messages on channel</span>
channel.subscribe(<span class="hljs-string">"greeting"</span>) { message <span class="hljs-keyword">in</span>
  <span class="hljs-built_in">print</span>(<span class="hljs-string">"<span class="hljs-subst">\\(message.data)</span>"</span>)
}</code></pre>
</div>
`;

exports[`Code Snapshot Test > view component > test case common to both #2`] = `
<div class="hljs overflow-auto p-32 " data-id="code">
  <pre
    lang="java"
  ><code class="language-java ui-text-code1">AblyRealtime ably = <span class="hljs-keyword">new</span> AblyRealtime(<span class="hljs-string">"1WChTA.mc0Biw:kNfiYG4KiPgmHHgH"</span>);
Channel channel = ably.channels.get(<span class="hljs-string">"web-pal"</span>);

<span class="hljs-comment">/* Subscribe to messages on channel */</span>

MessageListener listener;
listener = <span class="hljs-keyword">new</span> MessageListener() {
  <span class="hljs-meta">@Override</span>
  <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onMessage</span><span class="hljs-params">(Message message)</span> </span>{
    System.out.print(message.data);
  };
};
channel.subscribe(<span class="hljs-string">"greeting"</span>, listener);</code></pre>
</div>
`;
